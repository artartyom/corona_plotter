}
}
for (name in split_names){
if (length(name) > 1){
print(strsplit(name[[2]], "\\."))[[1]]
} else {
print(name[[1]])
}
}
for (name in split_names){
if (length(name) > 1){
print(strsplit(name[[2]], "\\.")[[1]])
} else {
print(name[[1]])
}
}
for (name in split_names){
if (length(name) > 1){
print(unlist(strsplit(name[[2]], "\\."))[1])
} else {
print(name[[1]])
}
}
strsplit(s122$factor,"(")
strsplit(s122$factor,"\\(")
split_names <- strsplit(s122$factor,"\\(")
for (name in 1:length(split_names)){
if (length(split_names[[name]])>1){
print(split_names[[name]][[2]])
} else {
print(split_names[[name]][[1]])
}
}
for (name in 1:length(split_names)){
if (length(split_names[[name]])>1){
split_names[[name]] <- split_names[[name]][[2]]
} else {
split_names[[name]] <- split_names[[name]][[1]]
}
}
split_names
unlist(split_names)
splitstr(unlist(split_names), "\\.")
strsplit(unlist(split_names), "\\.")
split_names <- strsplit(unlist(split_names), "\\.")
split_names
for (n in 1:length(split_names)){
print(split_names[[n]][[1]])
}
for (n in 1:length(split_names)){
split_names[[n]] <- split_names[[n]][[1]]
}
split_names
split_names <- unlist(split_names)
split_names
strsplit(split_names, "q")
split_names <- strsplit(split_names, "q")
for (name in split_names){
if (length(name) > 1){
print(unlist(strsplit(name[[2]], "\\."))[1])
} else {
print(name[[1]])
}
}
for (n in 1:length(split_names)){
if (length(split_names[[n]]) > 1){
if(split_names[[n]][[2]] == "CoffeeFre"){
print("CofeeFrequency")
} else {
print(split_names[[n]][[2]])
}
} else {
print(split_names[[n]][[1]])
}
}
for (n in 1:length(split_names)){
if (length(split_names[[n]]) > 1){
if(split_names[[n]][[2]] == "CoffeeFre"){
split_names[[n]] <- "CofeeFrequency"
} else {
split_names[[n]] <- split_names[[n]][[2]]
}
} else {
split_names[[n]] <- split_names[[n]][[1]]
}
}
split_names
rm(list=ls())
gc()
s122 <- fread("sheet122.csv", data.table = F)
head(s122)
colnames(s122)[2] <- "riskFactor"
strsplit(s122$riskFactor, "_")
split_names <- strsplit(s122$riskFactor, "_")
lapply(split_names, length)
unique(lapply(split_names, length))
lapply(split_names, function(x) if(length(x) > 3) {print(x[[3]])
print(x[[4]])})
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))})
head(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))}), n = 150)
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])})
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor <- unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor
s122
View(s122)
s122$factor[223]
strsplit(s122$factor[223], ">")
unlist(strsplit(s122$factor[223], ">"))
strsplit(unlist(strsplit(s122$factor[223], ">"))[[2]], ",")
grep("BMI", s122$factor)
s122[grep("BMI", s122$factor),]
gallstonesVector <- c(25,30,35,1000)
write.table(s122, "./sheet122.csv", sep=",", col.names = T, row.names = F, quote = F)
quit()
s122
rm(list=ls())
gc()
s122 <- fread("sheet122.csv", data.table = F)
head(s122)
colnames(s122)[2] <- "riskFactor"
strsplit(s122$riskFactor, "_")
split_names <- strsplit(s122$riskFactor, "_")
lapply(split_names, length)
unique(lapply(split_names, length))
lapply(split_names, function(x) if(length(x) > 3) {print(x[[3]])
print(x[[4]])})
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))})
head(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))}), n = 150)
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])})
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor <- unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor
s122
View(s122)
s122$factor[223]
strsplit(s122$factor[223], ">")
unlist(strsplit(s122$factor[223], ">"))
strsplit(unlist(strsplit(s122$factor[223], ">"))[[2]], ",")
grep("BMI", s122$factor)
s122[grep("BMI", s122$factor),]
gallstonesVector <- c(25,30,35,1000)
rm(list=ls())
gc()
s122 <- fread("sheet122.csv", data.table = F)
head(s122)
colnames(s122)[2] <- "riskFactor"
strsplit(s122$riskFactor, "_")
split_names <- strsplit(s122$riskFactor, "_")
lapply(split_names, length)
unique(lapply(split_names, length))
lapply(split_names, function(x) if(length(x) > 3) {print(x[[3]])
print(x[[4]])})
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))})
head(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))}), n = 150)
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])})
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor <- unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor
s122
View(s122)
s122$factor[223]
strsplit(s122$factor[223], ">")
unlist(strsplit(s122$factor[223], ">"))
strsplit(unlist(strsplit(s122$factor[223], ">"))[[2]], ",")
grep("BMI", s122$factor)
s122[grep("BMI", s122$factor),]
gallstonesVector <- c(25,30,35,1000)
rm(list=ls())
gc()
s122 <- fread("sheet122.csv", data.table = F)
head(s122)
colnames(s122)[2] <- "riskFactor"
strsplit(s122$riskFactor, "_")
split_names <- strsplit(s122$riskFactor, "_")
lapply(split_names, length)
unique(lapply(split_names, length))
lapply(split_names, function(x) if(length(x) > 3) {print(x[[3]])
print(x[[4]])})
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))})
head(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))}), n = 150)
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])})
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor <- unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor
s122
View(s122)
s122$factor[223]
strsplit(s122$factor[223], ">")
unlist(strsplit(s122$factor[223], ">"))
strsplit(unlist(strsplit(s122$factor[223], ">"))[[2]], ",")
grep("BMI", s122$factor)
s122[grep("BMI", s122$factor),]
gallstonesVector <- c(25,30,35,1000)
library(data.table)
library(dplyr)
rm(list=ls())
gc()
s122 <- fread("sheet122.csv", data.table = F)
head(s122)
colnames(s122)[2] <- "riskFactor"
strsplit(s122$riskFactor, "_")
split_names <- strsplit(s122$riskFactor, "_")
lapply(split_names, length)
unique(lapply(split_names, length))
lapply(split_names, function(x) if(length(x) > 3) {print(x[[3]])
print(x[[4]])})
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))})
head(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], x[[4]]))}), n = 150)
lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])})
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122
unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor <- unlist(lapply(split_names, function(x) if(length(x) > 3) {print(paste0(x[[3]], " // ", x[[4]]))} else {print (x[[3]])}))
s122$riskFactor
s122
View(s122)
s122$factor[223]
strsplit(s122$factor[223], ">")
unlist(strsplit(s122$factor[223], ">"))
strsplit(unlist(strsplit(s122$factor[223], ">"))[[2]], ",")
grep("BMI", s122$factor)
s122[grep("BMI", s122$factor),]
gallstonesVector <- c(25,30,35,1000)
write.table(s122, "./sheet122.csv", sep=",", col.names = T, row.names = F, quote = T)
library(data.table)
tab <- fread("~/new3.txt", data.table = F)
tab
tab <- fread("~/new3.tsv", data.table = F)
tab
?choose
?with
with(tab)
attach(tab)
rf
quit()
mean(c(1,2,3))
mean(1,2,3)
mean(1,2)
mean(1,3)
?mean
sum(1,2,3)
sum(c(1,2,3))
sum(c(1,2,3), na.rm = T)
sum(c(1,2,3), na.omit = T)
quit()
library(earth)
library(tidyversr)
library(tidyverse)
library(caret)
install.packages("caret")
library(caret)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
data(schedulingData)
str(schedulingData)
library(data.table)
library(tidyverse)
ma_data <- fread("Atlas/bmi.giant-ukbb.meta-analysis.combined.23May2018.txt", data.table = F)
head(ma_data)
on_chip <- fread("Atlas/newbids2.snps.txt", data.table = F, header = F)
head(ma_data)
grep("^rs", ma_data$SNP)
grep("^rs", on_chip)
head(on_chip)
tail(on_chip)
grep("^rs", on_chip$V1)
on_chip_rs <- on_chip[grep("^rs", on_chip$V1),]
head(on_chip_rs)
head(ma_data)
strsplit(head(ma_data$SNP), ":")
strsplit(tail(ma_data$SNP), ":")
strsplit(tail(ma_data)
tail(ma_data)
split_snp_names <- strsplit(ma_data$SNP, ":")
tail(split_snp_names)
lapply(split_snp_names[1:10], function(x) x[[1]])
gc()
snp_names_clean <- unlist(lapply(split_snp_names, function(x) x[[1]]))
length(snp_names_clean) == nrow(ma_data)
head(snp_names_clean)
tail(snp_names_clean)
ma_data$SNP <- snp_names_clean
gc()
gc()
head(on_chip_rs)
head(ma_data)
ma_data_on_chip <- filter(ma_data, SNP %in% on_chip_rs)
write.table(ma_data_on_chip, "Atlas/all_giant_onchip.tsv", col.names = T, row.names = F, sep = "\t")
filter(ma_data_on_chip, P < 5e-08)
nrow(filter(ma_data_on_chip, P < 5e-08))
quit()
library(data.table)
library(tidyverse)
goc <- fread("Atlas/all_giant_onchip.tsv", data.table = F)
head(goc)
goc$SNP
write.table(goc$SNP, "Atlas/snp_giant_in_atlas.txt", sep = "\t", col.names = F, row.names = F, quote = F)
quit()
library(data.table)
library(tidyverse)
full_dt <- fread("./Atlas/all_giant_onchip.tsv", data.table = F)
head(full_dt)
arr <- full_dt %>% arrange(P)
head(arr)
tail(arr)
arr[1,]
nrow(arr[1:50000,])
arr <- arr[1:50000,]
tail(arr)
length(unique(arr$SNP))
write.table(arr$SNP, "./Atlas/snp_giant_in_atlas_50k.txt", col.names = F, row.names = F, quote = F)
quit()\
quit()
library(data.table)
library(tidyverse)
install.packages("tidyverse")
install.packages("stringi")
install.packages("tidyverse")
install.packages("xm12")
install.packages("xml2")
install.packages("tidyverse")
library(tidyverse)
genodata <- fread("Atlas/bmi.giant-ukbb.meta-analysis.combined.23May2018.txt", data.table = F)
head(genodata)
quit()
library(data.table)
library(dplyr)
library(tidyverse)
library(ggplot2)
corona <- fread("~/corona.tsv", data.table = F)
corona
g <- ggplot(data = corona, mapping = aes(x = date))
g + geom_line(mapping = aes(y = china))
corona_transform <- gather(corona)
corona_transform
corona_transform <- gather(date~corona)
corona_transform <- gather(corona, date~.)
?gather
corona_transform <- gather(corona, -date)
corona_transform <- gather(corona, "country", "value", -date)
corona_transform
g <- ggplot(data = corona, mapping = aes(x = date, y = value, color = country))
g + geom_line()
corona_transform <- gather(corona, "country", "diseased", -date)
g <- ggplot(data = corona_transform, mapping = aes(x = date, y = diseased, color = country))
g + geom_line()
corona_transform$diff <- corona$worldwide - corona$china
g <- ggplot(data = corona_transform, mapping = aes(x = date, y = diff))
g + geom_line()
corona_transform$diff
exp(corona_transform$diff)
log(corona_transform$diff)
g + geom_line() + scale_y_log10()
g <- ggplot(data = corona_transform, mapping = aes(x = date, y = diseased, color = country))
g + geom_line() + scale_y_log10()
quit()
library(lubridate)
library(data.table)
library(tidyverse)
corona <- fread("~/corona.tsv", data.table = F)
class(corona$date)
dmy(corona$date)
class(dmy(corona$date))
corona$date <- (dmy(corona$date))
corona_gathered <- gather(corona, "type", "number", -date)
corona_gathered
library(ggplot2)
g <- ggplot(data = corona, mapping = aes(x=date, y=number, fill=type))
g + geom_line() + scale_y_log10() + scale_x_date()
g + geom_line() + scale_y_log10()
g + geom_line()
g <- ggplot(data = corona_gathered, mapping = aes(x=date, y=number, fill=type))
g + geom_line() + scale_y_log10() + scale_x_date()
g + geom_area() + scale_y_log10() + scale_x_date()
g + geom_contour() + scale_y_log10() + scale_x_date()
g + geom_polygon() + scale_y_log10() + scale_x_date()
g <- ggplot(data = corona_gathered, mapping = aes(x=date, y=number, color=type))
g + geom_line() + scale_y_log10() + scale_x_date()
setwd("git/personal/corona/")
library(data.table)
library(tidyverse)
library(lubridate)
corona <- fread("./corona.tsv", data.table = F)
corona$date <- dmy(corona$date)
corona_gathered <- gather(corona, "type", "cases")
corona
corona_gathered
corona_gathered <- gather(corona, "type", "cases", -date)
corona_gathered
corona <- fread("./corona.tsv", data.table = F)
corona
max(corona$date)
class(corona$date)
corona$date <- dmy(corona$date)
max(corona$date)
corona <- rbind(corona,
data.table(date = c("1.1.2020", max(corona$date)),
diseased = c(0,0),
died = c(0,0)))
corona <- rbind(corona,
data.table(date = c(dmy("1.1.2020"), max(corona$date)),
diseased = c(0,0),
died = c(0,0)))
class(corona$date)
corona
corona <- fread("./corona.tsv", data.table = F)
corona$date <- dmy(corona$date)
corona <- rbind(corona,
data.table(date = c(min(corona$date), max(corona$date)),
diseased = c(0,0),
died = c(0,0)))
corona_gathered <- gather(corona, "type", "cases", -date)
g <- ggplot2(corona_gathered, mapping = aes(x = date, y = cases, color = type, fill = type))
g+geom_polygon()
library(ggplot2)
g <- ggplot2(corona_gathered, mapping = aes(x = date, y = cases, color = type, fill = type))
g <- ggplot(corona_gathered, mapping = aes(x = date, y = cases, color = type, fill = type))
g+geom_polygon()
g+geom_line()
corona <- rbind(
data.table(date = c(min(corona$date), max(corona$date)),
diseased = c(0,0),
died = c(0,0)),
corona)
corona <- fread("./corona.tsv", data.table = F)
corona$date <- dmy(corona$date)
corona <- rbind(
data.table(date = c(min(corona$date), max(corona$date)),
diseased = c(0,0),
died = c(0,0)),
corona)
corona_gathered <- gather(corona, "type", "cases", -date)
g <- ggplot(corona_gathered, mapping = aes(x = date, y = cases, color = type, fill = type))
g+geom_line()
corona <- fread("./corona.tsv", data.table = F)
corona$date <- dmy(corona$date)
corona <- rbind(
data.table(date = min(corona$date)),
diseased = 0,
died = 0,
corona,
data.table(date = max(corona$date)),
diseased = 0,
died = 0
)
corona <- fread("./corona.tsv", data.table = F)
corona <- fread("./corona.tsv", data.table = F)
corona$date <- dmy(corona$date)
corona <- rbind(
corona <- rbind(
data.table(date = min(corona$date),
diseased = 0,
died = 0,
corona,
data.table(date = max(corona$date),
diseased = 0,
died = 0
)
)
)
library(data.table)
library(tidyverse)
library(lubridate)
library(ggplot2)
corona <- fread("./corona.tsv", data.table = F)
corona$date <- dmy(corona$date)
corona <- rbind(
data.table(date = min(corona$date),
diseased = 0,
died = 0),
corona,
data.table(date = max(corona$date),
diseased = 0,
died = 0
)
)
corona_gathered <- gather(corona, "type", "cases", -date)
g <- ggplot(corona_gathered, mapping = aes(x = date, y = cases, color = type, fill = type))
g+geom_line()
g+geom_area()
g+geom_polygon()
g+geom_polygon(alpha = 0.2)
g+geom_polygon(alpha = 0.1)
g +
geom_polygon(alpha = 0.1) +
geom_line()
g +
geom_polygon(alpha = 0.1) +
geom_line() +
scale_x_date() +
scale_y_log10()
g +
geom_polygon(alpha = 0.1) +
scale_x_date() +
scale_y_log10()
date()
dmy(date())
str(date())
dt <- date()
str(dt)
summary(dt)
today()
quit()
